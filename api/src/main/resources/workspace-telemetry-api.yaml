openapi: 3.0.0
info:
  title: Che Workspace Telemetry API
  description: This is the API of the Che workspace telemetry manager
  contact:
    email: dfestal@redhat.com
  license:
    name: Eclipse Public License - v 2.0
    url: https://www.eclipse.org/legal/epl-2.0/
  version: 1.0.0-oas3
servers:
- url: /
paths:
  /event:
    post:
      summary: Posts a telemetry event
      description: |
        Submit telemetry events to the workspace telemetry manager
        The event Id should be the Id of a built-in event or of
        an alread-registered custom event
      operationId: event
      requestBody:
        description: Event to send
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        200:
          description: Event was successfully submitted
        400:
          description: Error during event submission
  /activity:
    post:
      summary: Notifies that some activity is still occuring from a given user
      description: |
        Notifies that some activity is still occuring for a given user
        This will allow maintaining the current session alive for
        telemetry backends that manage user sessions.
      operationId: activity
      requestBody:
        description: Activity to notify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: notification was successfully submitted
components:
  schemas:
    Event:
      required:
      - agent
      - id
      - ip
      - ownerId
      - properties
      - resolution
      - userId
      type: object
      properties:
        id:
          type: string
          description: Identifier of the event type
          example: WORKSPACE_USED
        userId:
          type: string
          description: Identifier of the user that issued the event
        ownerId:
          type: string
          description: Identifier of the component that issued the event
        ip:
          type: string
          description: IP address of the browser that issued the event
          format: ipv4
          example: 127.0.0.1
        agent:
          type: string
          description: User agent of the browser that issued the event
          example: Mozilla/5.0 (X11; Linux x86_64â€¦) Gecko/20100101 Firefox/60.0
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Event_properties'
    Activity:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: Identifier of the user that notified activity
    Event_properties:
      type: object
      properties:
        id:
          type: string
        value:
          type: string